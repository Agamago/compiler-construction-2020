-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.9 from ParExpaddmult.y
-----------------------------------------------------------------------------

state 11 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pExp -> Exp                                 (0)
	%start_pExp1 -> Exp1                               (1)
	Integer -> L_integ                                 (2)
	Exp -> Exp '+' Exp                                 (3)
	Exp1 -> Exp '*' Exp                                (4)
	Exp1 -> Integer                                    (5)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'*'            { PT _ (TS _ 1) }
	'+'            { PT _ (TS _ 2) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pExp     rule  0
	%start_pExp1    rule  1
	Integer         rule  2
	Exp             rule  3
	Exp1            rules 4, 5

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0



	Exp            goto state 7

State 1


	L_integ        shift, and enter state 3

	Integer        goto state 4
	Exp            goto state 5
	Exp1           goto state 6

State 2


	L_integ        shift, and enter state 3


State 3

	Integer -> L_integ .                                (rule 2)

	%eof           reduce using rule 2


State 4

	Exp1 -> Integer .                                   (rule 5)

	%eof           reduce using rule 5


State 5

	Exp -> Exp . '+' Exp                                (rule 3)
	Exp1 -> Exp . '*' Exp                               (rule 4)

	'*'            shift, and enter state 9
	'+'            shift, and enter state 8


State 6

	%start_pExp1 -> Exp1 .                              (rule 1)

	%eof           accept


State 7

	%start_pExp -> Exp .                                (rule 0)
	Exp -> Exp . '+' Exp                                (rule 3)

	'+'            shift, and enter state 8
	%eof           accept


State 8

	Exp -> Exp '+' . Exp                                (rule 3)


	Exp            goto state 11

State 9

	Exp1 -> Exp '*' . Exp                               (rule 4)


	Exp            goto state 10

State 10

	Exp -> Exp . '+' Exp                                (rule 3)
	Exp1 -> Exp '*' Exp .                               (rule 4)

	'+'            shift, and enter state 8
	%eof           reduce using rule 4


State 11

	Exp -> Exp . '+' Exp                                (rule 3)
	Exp -> Exp '+' Exp .                                (rule 3)

	'*'            reduce using rule 3
	'+'            shift, and enter state 8
			(reduce using rule 3)

	%eof           reduce using rule 3


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 6
Number of terminals: 3
Number of non-terminals: 5
Number of states: 12
